!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!**S/P INISOILI_SVS
!
      SUBROUTINE INISOILI_SVS( f, fsiz, ni )
!
!
#ifdef RUNSVS
USE runsvs_mod
#endif
      implicit none
#include <arch_specific.hf>
!
!
      INTEGER ni, fsiz
      REAL f(fsiz)
      REAL b, usb, fb
      INTEGER, PARAMETER :: NL = 7
!
! *** copy of inisoili, with modif for SVS ***
!Author
!         Stephane Belair (February 1999)
!
!
!Revision
! 001     S. Belair (Feb 2000)
!            Calculations for sand and clay are done outside the
!            subroutine (in INISURF)
!            Use the bus "f"
! 002     B. Bilodeau (Nov 2000) - New comdeck phybus.cdk
! 003     S. Dyck (July 2012) revert FC calculation
! 004     S. Dyck (August 2012) set specific values for WSAT WWILT and WFC     
! 005     N. Alavi (Apr 2014)  WSAT(NL), WWILT(NL) and WFC(NL), KSAT(NL), PSISAT(NL) is calculated for each soil layer based on soil texture data
!
!Object
!         Initialize the soil properties from the sand and clay
!         fraction for 5 layers of the soil
!
!
!Arguments
!
!             - Input/Output -
! F           permanent bus
!
!             - Input -
! NI          longueur d'une tranche horizontale
! NL          Number of soil layers in SVS
!
!
      INTEGER I, K
!
#include "phy_macros_f.h"
#ifndef RUNSVS
#include "phybus.cdk"
#endif
!
!
      DO k=1,nl
      DO i=0,ni-1
        
!fixed values 
!        f(wsat  + i + (k-1)*ni)  =  0.45
!        f(wwilt + i + (k-1)*ni)  =  0.1
!        f(wfc  + i + (k-1)*ni)  =  0.35

!calculate based on soil texture  data 
         f(wsat  + i + (k-1)*ni)  =   -0.00126*f(sand + i +( k-1)*ni) + 0.489 
         f(wwilt + i + (k-1)*ni)  =  37.1342E-3*SQRT(MAX(1.,f(clay + i +(k-1)*ni)))
         f(wfc   + i + (k-1)*ni)  =  89.0467E-3 * MAX(1.,f(clay+i))**0.3496
         b =  0.137 * f(clay+i + (k-1)*ni)  + 3.501
         usb = 1./b
         f(bcoef + i + (k-1)*ni)  =  b

         fb = b**usb/(b-1.) * ((3.*b+2.)**(1.-usb)-(2.*b+2.)**(1.-usb))
         f(psisat + i + (k-1)*ni)  = 0.01*(10.0**(-0.0131*f(sand+i+(k-1)*ni)+1.88))
         f(ksat  + i + (k-1)*ni)  = (10.0**(0.0153*f(sand+i+(k-1)*ni)-0.884))*7.0556E-6

! Compute water content at field capacity along sloping aquifer based on Soulis et al. 2012
! Ensure that wc at fc stays between wilting point and saturation

        IF (ABS(f(slop+i)).GT. &
           2.*f(draindens+i)*f(psisat+i+ (k-1)*ni)* &
           (f(wsat+i+ (k-1)*ni)/f(wwilt+i+(k-1)*ni)*fb)**b) THEN
          f(wfcint + i+ (k-1)*ni) = f(wwilt+i+(k-1)*ni)
        ELSEIF (ABS(f(slop+i)).LT. &
           2.*f(draindens+i)*f(psisat+i+ (k-1)*ni)*fb**b) THEN
          f(wfcint + i+ (k-1)*ni) = f(wsat+i+ (k-1)*ni)
        ELSE IF( f(slop+i) .ne. 0.0 ) then
          f(wfcint + i+ (k-1)*ni) = f(wsat+i+ (k-1)*ni)*fb* &
            (f(psisat+i+ (k-1)*ni)/ABS(f(slop+i))*2.*f(draindens+i))**usb
        ELSE

          f(wfcint + i+ (k-1)*ni) =  f(wfc+i+ (k-1)*ni)

        ENDIF




! Compute effective parameter for watdrain
         f(grkef+ i)  = 2.*f(draindens+i)* f(slop+i)



      END DO
      END DO
!       
      DO i=0,ni-1
         f(cgsat + i)  =  -1.557E-2 * f(sand+i) &
                         -  1.441E-2 * f(clay+i) + 4.7021
         f(cgsat + i)  = 1.E-6 * f(cgsat+i)         
      END DO
!
!
      RETURN
      END
